<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.github.tm</groupId>
    <artifactId>glink</artifactId>
    <packaging>pom</packaging>
    <version>1.0-SNAPSHOT</version>

    <modules>
        <module>glink-core</module>
        <module>glink-kafka</module>
        <module>glink-features</module>
        <module>glink-examples</module>
    </modules>

    <properties>
        <flink.version>1.10.0</flink.version>
        <kafka.version>2.5.0</kafka.version>
        <avro.version>1.10.0</avro.version>
        <bijection.version>0.9.7</bijection.version>
        <scala.binary.version>2.12</scala.binary.version>
        <log4j.version>2.12.1</log4j.version>
        <junit.version>4.13</junit.version>
        <jackson.version>2.10.1</jackson.version>
        <flink.shaded.version>10.0</flink.shaded.version>
        <h3.version>3.6.3</h3.version>
        <geodesy.version>1.1.3</geodesy.version>
    </properties>

    <dependencyManagement>
        <dependencies>

            <!-- Flink dependencies -->
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-core</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-java_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-streaming-scala_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-connector-kafka_${scala.binary.version}</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>
            <dependency>
                <groupId>org.apache.flink</groupId>
                <artifactId>flink-avro</artifactId>
                <version>${flink.version}</version>
                <scope>provided</scope>
            </dependency>

            <!-- Glink dependencies -->
            <dependency>
                <groupId>com.github.tm</groupId>
                <artifactId>glink-core</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tm</groupId>
                <artifactId>glink-features</artifactId>
                <version>${project.version}</version>
            </dependency>
            <dependency>
                <groupId>com.github.tm</groupId>
                <artifactId>glink-kafka</artifactId>
                <version>${project.version}</version>
            </dependency>

            <!-- Kafka dependency -->
            <dependency>
                <groupId>org.apache.kafka</groupId>
                <artifactId>kafka_${scala.binary.version}</artifactId>
                <version>${kafka.version}</version>
            </dependency>

            <!-- avro dependencies -->
            <dependency>
                <groupId>org.apache.avro</groupId>
                <artifactId>avro</artifactId>
                <version>${avro.version}</version>
            </dependency>
            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>bijection-core_${scala.binary.version}</artifactId>
                <version>${bijection.version}</version>
            </dependency>
            <dependency>
                <groupId>com.twitter</groupId>
                <artifactId>bijection-avro_${scala.binary.version}</artifactId>
                <version>${bijection.version}</version>
            </dependency>

            <!-- Geographical things dependencies -->
            <dependency>
                <groupId>org.locationtech.jts</groupId>
                <artifactId>jts-core</artifactId>
                <version>1.16.1</version>
            </dependency>
            <dependency>
                <groupId>org.gavaghan</groupId>
                <artifactId>geodesy</artifactId>
                <version>${geodesy.version}</version>
            </dependency>
            <dependency>
                <groupId>com.uber</groupId>
                <artifactId>h3</artifactId>
                <version>${h3.version}</version>
            </dependency>

            <!-- Junit dependency -->
            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${junit.version}</version>
                <scope>test</scope>
            </dependency>

            <!-- Add a logging Framework, to make the examples produce -->
            <!--             logs when executing in the IDE            -->
            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <scope>compile</scope>
                <version>${log4j.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>

    <dependencies>
        <!-- Junit dependency -->
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
        </dependency>
    </dependencies>

    <build>
        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.0</version>
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- The semantics of this option are reversed, see MCOMPILER-209. -->
                    <useIncrementalCompilation>false</useIncrementalCompilation>
                    <compilerArgs>
                        <!-- Prevents recompilation due to missing package-info.class, see MCOMPILER-205 -->
                        <arg>-Xpkginfo:always</arg>
                    </compilerArgs>
                </configuration>
            </plugin>

            <!--<plugin>-->
                <!--<groupId>org.apache.maven.plugins</groupId>-->
                <!--<artifactId>maven-checkstyle-plugin</artifactId>-->
                <!--<version>3.1.1</version>-->
                <!--<executions>-->
                    <!--<execution>-->
                        <!--<id>validate</id>-->
                        <!--<phase>validate</phase>-->
                        <!--<configuration>-->
                            <!--<configLocation>./config/checkStyle.xml</configLocation>-->
                            <!--<encoding>UTF-8</encoding>-->
                            <!--<consoleOutput>true</consoleOutput>-->
                            <!--<failsOnError>true</failsOnError>-->
                            <!--<includeTestSourceDirectory>true</includeTestSourceDirectory>-->
                        <!--</configuration>-->
                        <!--<goals>-->
                            <!--<goal>check</goal>-->
                        <!--</goals>-->
                    <!--</execution>-->
                <!--</executions>-->
            <!--</plugin>-->


        </plugins>
    </build>

</project>